{
  "version": 3,
  "sources": ["../../solid-js/store/dist/dev.js"],
  "sourcesContent": ["import { $PROXY, DEV as DEV$1, $TRACK, getListener, batch, createSignal } from 'solid-js';\r\n\r\nconst $RAW = Symbol(\"store-raw\"),\r\n  $NODE = Symbol(\"store-node\"),\r\n  $NAME = Symbol(\"store-name\");\r\nfunction wrap$1(value, name) {\r\n  let p = value[$PROXY];\r\n  if (!p) {\r\n    Object.defineProperty(value, $PROXY, {\r\n      value: p = new Proxy(value, proxyTraps$1)\r\n    });\r\n    if (!Array.isArray(value)) {\r\n      const keys = Object.keys(value),\r\n        desc = Object.getOwnPropertyDescriptors(value);\r\n      for (let i = 0, l = keys.length; i < l; i++) {\r\n        const prop = keys[i];\r\n        if (desc[prop].get) {\r\n          Object.defineProperty(value, prop, {\r\n            enumerable: desc[prop].enumerable,\r\n            get: desc[prop].get.bind(p)\r\n          });\r\n        }\r\n      }\r\n    }\r\n    if (name) Object.defineProperty(value, $NAME, {\r\n      value: name\r\n    });\r\n  }\r\n  return p;\r\n}\r\nfunction isWrappable(obj) {\r\n  let proto;\r\n  return obj != null && typeof obj === \"object\" && (obj[$PROXY] || !(proto = Object.getPrototypeOf(obj)) || proto === Object.prototype || Array.isArray(obj));\r\n}\r\nfunction unwrap(item, set = new Set()) {\r\n  let result, unwrapped, v, prop;\r\n  if (result = item != null && item[$RAW]) return result;\r\n  if (!isWrappable(item) || set.has(item)) return item;\r\n  if (Array.isArray(item)) {\r\n    if (Object.isFrozen(item)) item = item.slice(0);else set.add(item);\r\n    for (let i = 0, l = item.length; i < l; i++) {\r\n      v = item[i];\r\n      if ((unwrapped = unwrap(v, set)) !== v) item[i] = unwrapped;\r\n    }\r\n  } else {\r\n    if (Object.isFrozen(item)) item = Object.assign({}, item);else set.add(item);\r\n    const keys = Object.keys(item),\r\n      desc = Object.getOwnPropertyDescriptors(item);\r\n    for (let i = 0, l = keys.length; i < l; i++) {\r\n      prop = keys[i];\r\n      if (desc[prop].get) continue;\r\n      v = item[prop];\r\n      if ((unwrapped = unwrap(v, set)) !== v) item[prop] = unwrapped;\r\n    }\r\n  }\r\n  return item;\r\n}\r\nfunction getDataNodes(target) {\r\n  let nodes = target[$NODE];\r\n  if (!nodes) Object.defineProperty(target, $NODE, {\r\n    value: nodes = {}\r\n  });\r\n  return nodes;\r\n}\r\nfunction getDataNode(nodes, property, value) {\r\n  return nodes[property] || (nodes[property] = createDataNode(value));\r\n}\r\nfunction proxyDescriptor$1(target, property) {\r\n  const desc = Reflect.getOwnPropertyDescriptor(target, property);\r\n  if (!desc || desc.get || !desc.configurable || property === $PROXY || property === $NODE || property === $NAME) return desc;\r\n  delete desc.value;\r\n  delete desc.writable;\r\n  desc.get = () => target[$PROXY][property];\r\n  return desc;\r\n}\r\nfunction trackSelf(target) {\r\n  if (getListener()) {\r\n    const nodes = getDataNodes(target);\r\n    (nodes._ || (nodes._ = createDataNode()))();\r\n  }\r\n}\r\nfunction ownKeys(target) {\r\n  trackSelf(target);\r\n  return Reflect.ownKeys(target);\r\n}\r\nfunction createDataNode(value) {\r\n  const [s, set] = createSignal(value, {\r\n    equals: false,\r\n    internal: true\r\n  });\r\n  s.$ = set;\r\n  return s;\r\n}\r\nconst proxyTraps$1 = {\r\n  get(target, property, receiver) {\r\n    if (property === $RAW) return target;\r\n    if (property === $PROXY) return receiver;\r\n    if (property === $TRACK) {\r\n      trackSelf(target);\r\n      return receiver;\r\n    }\r\n    const nodes = getDataNodes(target);\r\n    const tracked = nodes.hasOwnProperty(property);\r\n    let value = tracked ? nodes[property]() : target[property];\r\n    if (property === $NODE || property === \"__proto__\") return value;\r\n    if (!tracked) {\r\n      const desc = Object.getOwnPropertyDescriptor(target, property);\r\n      if (getListener() && (typeof value !== \"function\" || target.hasOwnProperty(property)) && !(desc && desc.get)) value = getDataNode(nodes, property, value)();\r\n    }\r\n    return isWrappable(value) ? wrap$1(value, target[$NAME] && `${target[$NAME]}:${property.toString()}`) : value;\r\n  },\r\n  has(target, property) {\r\n    if (property === $RAW || property === $PROXY || property === $TRACK || property === $NODE || property === \"__proto__\") return true;\r\n    this.get(target, property, target);\r\n    return property in target;\r\n  },\r\n  set() {\r\n    console.warn(\"Cannot mutate a Store directly\");\r\n    return true;\r\n  },\r\n  deleteProperty() {\r\n    console.warn(\"Cannot mutate a Store directly\");\r\n    return true;\r\n  },\r\n  ownKeys: ownKeys,\r\n  getOwnPropertyDescriptor: proxyDescriptor$1\r\n};\r\nfunction setProperty(state, property, value, deleting = false) {\r\n  if (!deleting && state[property] === value) return;\r\n  const prev = state[property],\r\n    len = state.length;\r\n  if (globalThis._$onStoreNodeUpdate) globalThis._$onStoreNodeUpdate(state, property, value, prev);\r\n  if (value === undefined) delete state[property];else state[property] = value;\r\n  let nodes = getDataNodes(state),\r\n    node;\r\n  if (node = getDataNode(nodes, property, prev)) node.$(() => value);\r\n  if (Array.isArray(state) && state.length !== len) (node = getDataNode(nodes, \"length\", len)) && node.$(state.length);\r\n  (node = nodes._) && node.$();\r\n}\r\nfunction mergeStoreNode(state, value) {\r\n  const keys = Object.keys(value);\r\n  for (let i = 0; i < keys.length; i += 1) {\r\n    const key = keys[i];\r\n    setProperty(state, key, value[key]);\r\n  }\r\n}\r\nfunction updateArray(current, next) {\r\n  if (typeof next === \"function\") next = next(current);\r\n  next = unwrap(next);\r\n  if (Array.isArray(next)) {\r\n    if (current === next) return;\r\n    let i = 0,\r\n      len = next.length;\r\n    for (; i < len; i++) {\r\n      const value = next[i];\r\n      if (current[i] !== value) setProperty(current, i, value);\r\n    }\r\n    setProperty(current, \"length\", len);\r\n  } else mergeStoreNode(current, next);\r\n}\r\nfunction updatePath(current, path, traversed = []) {\r\n  let part,\r\n    prev = current;\r\n  if (path.length > 1) {\r\n    part = path.shift();\r\n    const partType = typeof part,\r\n      isArray = Array.isArray(current);\r\n    if (Array.isArray(part)) {\r\n      for (let i = 0; i < part.length; i++) {\r\n        updatePath(current, [part[i]].concat(path), traversed);\r\n      }\r\n      return;\r\n    } else if (isArray && partType === \"function\") {\r\n      for (let i = 0; i < current.length; i++) {\r\n        if (part(current[i], i)) updatePath(current, [i].concat(path), traversed);\r\n      }\r\n      return;\r\n    } else if (isArray && partType === \"object\") {\r\n      const {\r\n        from = 0,\r\n        to = current.length - 1,\r\n        by = 1\r\n      } = part;\r\n      for (let i = from; i <= to; i += by) {\r\n        updatePath(current, [i].concat(path), traversed);\r\n      }\r\n      return;\r\n    } else if (path.length > 1) {\r\n      updatePath(current[part], path, [part].concat(traversed));\r\n      return;\r\n    }\r\n    prev = current[part];\r\n    traversed = [part].concat(traversed);\r\n  }\r\n  let value = path[0];\r\n  if (typeof value === \"function\") {\r\n    value = value(prev, traversed);\r\n    if (value === prev) return;\r\n  }\r\n  if (part === undefined && value == undefined) return;\r\n  value = unwrap(value);\r\n  if (part === undefined || isWrappable(prev) && isWrappable(value) && !Array.isArray(value)) {\r\n    mergeStoreNode(prev, value);\r\n  } else setProperty(current, part, value);\r\n}\r\nfunction createStore(...[store, options]) {\r\n  const unwrappedStore = unwrap(store || {});\r\n  const isArray = Array.isArray(unwrappedStore);\r\n  if (typeof unwrappedStore !== \"object\" && typeof unwrappedStore !== \"function\") throw new Error(`Unexpected type ${typeof unwrappedStore} received when initializing 'createStore'. Expected an object.`);\r\n  const wrappedStore = wrap$1(unwrappedStore, (options && options.name || DEV$1.hashValue(unwrappedStore)));\r\n  {\r\n    const name = options && options.name || DEV$1.hashValue(unwrappedStore);\r\n    DEV$1.registerGraph(name, {\r\n      value: unwrappedStore\r\n    });\r\n  }\r\n  function setStore(...args) {\r\n    batch(() => {\r\n      isArray && args.length === 1 ? updateArray(unwrappedStore, args[0]) : updatePath(unwrappedStore, args);\r\n    });\r\n  }\r\n  return [wrappedStore, setStore];\r\n}\r\n\r\nfunction proxyDescriptor(target, property) {\r\n  const desc = Reflect.getOwnPropertyDescriptor(target, property);\r\n  if (!desc || desc.get || desc.set || !desc.configurable || property === $PROXY || property === $NODE || property === $NAME) return desc;\r\n  delete desc.value;\r\n  delete desc.writable;\r\n  desc.get = () => target[$PROXY][property];\r\n  desc.set = v => target[$PROXY][property] = v;\r\n  return desc;\r\n}\r\nconst proxyTraps = {\r\n  get(target, property, receiver) {\r\n    if (property === $RAW) return target;\r\n    if (property === $PROXY) return receiver;\r\n    if (property === $TRACK) {\r\n      trackSelf(target);\r\n      return receiver;\r\n    }\r\n    const nodes = getDataNodes(target);\r\n    const tracked = nodes.hasOwnProperty(property);\r\n    let value = tracked ? nodes[property]() : target[property];\r\n    if (property === $NODE || property === \"__proto__\") return value;\r\n    if (!tracked) {\r\n      const desc = Object.getOwnPropertyDescriptor(target, property);\r\n      const isFunction = typeof value === \"function\";\r\n      if (getListener() && (!isFunction || target.hasOwnProperty(property)) && !(desc && desc.get)) value = getDataNode(nodes, property, value)();else if (value != null && isFunction && value === Array.prototype[property]) {\r\n        return (...args) => batch(() => Array.prototype[property].apply(receiver, args));\r\n      }\r\n    }\r\n    return isWrappable(value) ? wrap(value, target[$NAME] && `${target[$NAME]}:${property.toString()}`) : value;\r\n  },\r\n  has(target, property) {\r\n    if (property === $RAW || property === $PROXY || property === $TRACK || property === $NODE || property === \"__proto__\") return true;\r\n    this.get(target, property, target);\r\n    return property in target;\r\n  },\r\n  set(target, property, value) {\r\n    batch(() => setProperty(target, property, unwrap(value)));\r\n    return true;\r\n  },\r\n  deleteProperty(target, property) {\r\n    batch(() => setProperty(target, property, undefined, true));\r\n    return true;\r\n  },\r\n  ownKeys: ownKeys,\r\n  getOwnPropertyDescriptor: proxyDescriptor\r\n};\r\nfunction wrap(value, name) {\r\n  let p = value[$PROXY];\r\n  if (!p) {\r\n    Object.defineProperty(value, $PROXY, {\r\n      value: p = new Proxy(value, proxyTraps)\r\n    });\r\n    const keys = Object.keys(value),\r\n      desc = Object.getOwnPropertyDescriptors(value);\r\n    for (let i = 0, l = keys.length; i < l; i++) {\r\n      const prop = keys[i];\r\n      if (desc[prop].get) {\r\n        const get = desc[prop].get.bind(p);\r\n        Object.defineProperty(value, prop, {\r\n          get\r\n        });\r\n      }\r\n      if (desc[prop].set) {\r\n        const og = desc[prop].set,\r\n          set = v => batch(() => og.call(p, v));\r\n        Object.defineProperty(value, prop, {\r\n          set\r\n        });\r\n      }\r\n    }\r\n    if (name) Object.defineProperty(value, $NAME, {\r\n      value: name\r\n    });\r\n  }\r\n  return p;\r\n}\r\nfunction createMutable(state, options) {\r\n  const unwrappedStore = unwrap(state || {});\r\n  if (typeof unwrappedStore !== \"object\" && typeof unwrappedStore !== \"function\") throw new Error(`Unexpected type ${typeof unwrappedStore} received when initializing 'createMutable'. Expected an object.`);\r\n  const wrappedStore = wrap(unwrappedStore, (options && options.name || DEV$1.hashValue(unwrappedStore)));\r\n  {\r\n    const name = options && options.name || DEV$1.hashValue(unwrappedStore);\r\n    DEV$1.registerGraph(name, {\r\n      value: unwrappedStore\r\n    });\r\n  }\r\n  return wrappedStore;\r\n}\r\nfunction modifyMutable(state, modifier) {\r\n  batch(() => modifier(unwrap(state)));\r\n}\r\n\r\nconst $ROOT = Symbol(\"store-root\");\r\nfunction applyState(target, parent, property, merge, key) {\r\n  const previous = parent[property];\r\n  if (target === previous) return;\r\n  if (property !== $ROOT && (!isWrappable(target) || !isWrappable(previous) || key && target[key] !== previous[key])) {\r\n    setProperty(parent, property, target);\r\n    return;\r\n  }\r\n  if (Array.isArray(target)) {\r\n    if (target.length && previous.length && (!merge || key && target[0] && target[0][key] != null)) {\r\n      let i, j, start, end, newEnd, item, newIndicesNext, keyVal;\r\n      for (start = 0, end = Math.min(previous.length, target.length); start < end && (previous[start] === target[start] || key && previous[start] && target[start] && previous[start][key] === target[start][key]); start++) {\r\n        applyState(target[start], previous, start, merge, key);\r\n      }\r\n      const temp = new Array(target.length),\r\n        newIndices = new Map();\r\n      for (end = previous.length - 1, newEnd = target.length - 1; end >= start && newEnd >= start && (previous[end] === target[newEnd] || key && previous[start] && target[start] && previous[end][key] === target[newEnd][key]); end--, newEnd--) {\r\n        temp[newEnd] = previous[end];\r\n      }\r\n      if (start > newEnd || start > end) {\r\n        for (j = start; j <= newEnd; j++) setProperty(previous, j, target[j]);\r\n        for (; j < target.length; j++) {\r\n          setProperty(previous, j, temp[j]);\r\n          applyState(target[j], previous, j, merge, key);\r\n        }\r\n        if (previous.length > target.length) setProperty(previous, \"length\", target.length);\r\n        return;\r\n      }\r\n      newIndicesNext = new Array(newEnd + 1);\r\n      for (j = newEnd; j >= start; j--) {\r\n        item = target[j];\r\n        keyVal = key && item ? item[key] : item;\r\n        i = newIndices.get(keyVal);\r\n        newIndicesNext[j] = i === undefined ? -1 : i;\r\n        newIndices.set(keyVal, j);\r\n      }\r\n      for (i = start; i <= end; i++) {\r\n        item = previous[i];\r\n        keyVal = key && item ? item[key] : item;\r\n        j = newIndices.get(keyVal);\r\n        if (j !== undefined && j !== -1) {\r\n          temp[j] = previous[i];\r\n          j = newIndicesNext[j];\r\n          newIndices.set(keyVal, j);\r\n        }\r\n      }\r\n      for (j = start; j < target.length; j++) {\r\n        if (j in temp) {\r\n          setProperty(previous, j, temp[j]);\r\n          applyState(target[j], previous, j, merge, key);\r\n        } else setProperty(previous, j, target[j]);\r\n      }\r\n    } else {\r\n      for (let i = 0, len = target.length; i < len; i++) {\r\n        applyState(target[i], previous, i, merge, key);\r\n      }\r\n    }\r\n    if (previous.length > target.length) setProperty(previous, \"length\", target.length);\r\n    return;\r\n  }\r\n  const targetKeys = Object.keys(target);\r\n  for (let i = 0, len = targetKeys.length; i < len; i++) {\r\n    applyState(target[targetKeys[i]], previous, targetKeys[i], merge, key);\r\n  }\r\n  const previousKeys = Object.keys(previous);\r\n  for (let i = 0, len = previousKeys.length; i < len; i++) {\r\n    if (target[previousKeys[i]] === undefined) setProperty(previous, previousKeys[i], undefined);\r\n  }\r\n}\r\nfunction reconcile(value, options = {}) {\r\n  const {\r\n      merge,\r\n      key = \"id\"\r\n    } = options,\r\n    v = unwrap(value);\r\n  return state => {\r\n    if (!isWrappable(state) || !isWrappable(v)) return v;\r\n    const res = applyState(v, {\r\n      [$ROOT]: state\r\n    }, $ROOT, merge, key);\r\n    return res === undefined ? state : res;\r\n  };\r\n}\r\nconst producers = new WeakMap();\r\nconst setterTraps = {\r\n  get(target, property) {\r\n    if (property === $RAW) return target;\r\n    const value = target[property];\r\n    let proxy;\r\n    return isWrappable(value) ? producers.get(value) || (producers.set(value, proxy = new Proxy(value, setterTraps)), proxy) : value;\r\n  },\r\n  set(target, property, value) {\r\n    setProperty(target, property, unwrap(value));\r\n    return true;\r\n  },\r\n  deleteProperty(target, property) {\r\n    setProperty(target, property, undefined, true);\r\n    return true;\r\n  }\r\n};\r\nfunction produce(fn) {\r\n  return state => {\r\n    if (isWrappable(state)) {\r\n      let proxy;\r\n      if (!(proxy = producers.get(state))) {\r\n        producers.set(state, proxy = new Proxy(state, setterTraps));\r\n      }\r\n      fn(proxy);\r\n    }\r\n    return state;\r\n  };\r\n}\r\n\r\nconst DEV = {\r\n  $NAME,\r\n  $NODE,\r\n  isWrappable\r\n} ;\r\n\r\nexport { $RAW, DEV, createMutable, createStore, modifyMutable, produce, reconcile, unwrap };\r\n"],
  "mappings": "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",
  "names": ["DEV"]
}
